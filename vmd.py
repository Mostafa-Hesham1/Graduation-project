# -*- coding: utf-8 -*-
"""vmd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/Mostafa-Hesham1/Graduation-project/blob/Mostafa-Hesham-220367/vmd.ipynb
"""

!kaggle datasets download -d cyizhuo/stanford-cars-by-classes-folder
!unzip stanford-cars-by-classes-folder.zip -d /content/cars_by_classes

!ls /content/cars_by_classes

"""## **Load Dataset and Prepare Data**"""

import os
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

data_dir = '/content/cars_by_classes/train'

image_data = []

for class_name in os.listdir(data_dir):
    class_dir = os.path.join(data_dir, class_name)
    if os.path.isdir(class_dir):
        for img_file in os.listdir(class_dir):
            img_path = os.path.join(class_dir, img_file)
            image_data.append([img_path, class_name])

df_images = pd.DataFrame(image_data, columns=['image_path', 'model_name'])

df_images.head()

"""## **Display Sample Images**"""

def display_unique_model_images(df, num_images=20):
    unique_models_df = df.drop_duplicates(subset='model_name').sample(num_images, random_state=42)

    fig, axes = plt.subplots(4, 5, figsize=(20, 15))
    axes = axes.flatten()

    for i, ax in enumerate(axes):
        img_path = unique_models_df.iloc[i]['image_path']
        img = mpimg.imread(img_path)
        model_name = unique_models_df.iloc[i]['model_name']
        ax.imshow(img)
        ax.set_title(model_name, fontsize=10)
        ax.axis('off')
    plt.tight_layout()
    plt.show()

display_unique_model_images(df_images, num_images=20)

"""
## Count Classes and Images"""

num_classes = len(os.listdir(data_dir))
num_images = sum([len(files) for r, d, files in os.walk(data_dir)])

print(f"Number of classes: {num_classes}")
print(f"Number of images: {num_images}")

"""## **Check for Missing Data**"""

df_images.sample(10)

print("Checking for missing data...")
print(df_images.isna().sum())

"""# **Display Class Distribution**"""

plt.figure(figsize=(30, 10))
df_images['model_name'].value_counts().plot(kind='bar')
plt.title('Distribution of Car Models')
plt.ylabel('Number of images')
plt.xlabel('Car Model')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

import pandas as pd

car_model_counts = df_images['model_name'].value_counts().reset_index()

car_model_counts.columns = ['Car Model', 'Number of Images']
print(car_model_counts)
from IPython.display import display
display(car_model_counts)

"""# **Data Augmentation and Preprocessing**"""